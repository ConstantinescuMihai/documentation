# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  - master
stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              npm install
              npm run build
            displayName: "npm install and build"
          - task: CopyFiles@2
            inputs:
              SourceFolder: "build/"
              Contents: "**"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"
  - stage: Deployment
    displayName: Deploy to S3
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment:
        pool:
          vmImage: "ubuntu-latest"
        environment: dev
        variables:
          - name: DistributionId
            value: "YOUR_DISTRIBUTION_ID"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: S3Upload@1
                  inputs:
                    awsCredentials: "YOUR_AWS_SERVICE_CONNECTION"
                    regionName: "YOUR_AWS_REGION_NAME"
                    bucketName: "YOUR_BUCKET_NAME"
                    sourceFolder: "$(Pipeline.Workspace)/drop/"
                    globExpressions: "**"
                - task: AWSCLI@1
                  inputs:
                    awsCredentials: "YOUR_AWS_SERVICE_CONNECTION"
                    awsCommand: "cloudfront"
                    awsSubCommand: "create-invalidation"
                    awsArguments: '--distribution-id $(DistributionId) --paths "/*"'
                  displayName: "Invalidate CloudFront Cache"